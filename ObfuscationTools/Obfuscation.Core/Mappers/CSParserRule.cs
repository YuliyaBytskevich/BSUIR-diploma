namespace Obfuscation.Core.Mappers
{
    public static class CSParserRule
    {
        public static int NameToIndex(string ruleName)
        {
            ruleName = ruleName.ToUpper();
            if (!ruleName.Contains("RULE"))
            {
                ruleName = "RULE_" + ruleName;
            }
            switch (ruleName)
            {
                case "RULE_COMPILATION_UNIT": return 0;
                case "RULE_NAMESPACE_OR_TYPE_NAME": return 1;
                case "RULE_TYPE": return 2;
                case "RULE_BASE_TYPE": return 3;
                case "RULE_SIMPLE_TYPE": return 4;
                case "RULE_NUMERIC_TYPE": return 5;
                case "RULE_INTEGRAL_TYPE": return 6;
                case "RULE_FLOATING_POINT_TYPE": return 7;
                case "RULE_CLASS_TYPE": return 8;
                case "RULE_TYPE_ARGUMENT_LIST": return 9;
                case "RULE_ARGUMENT_LIST": return 10;
                case "RULE_ARGUMENT": return 11;
                case "RULE_EXPRESSION": return 12;
                case "RULE_NON_ASSIGNMENT_EXPRESSION": return 13;
                case "RULE_ASSIGNMENT": return 14;
                case "RULE_ASSIGNMENT_OPERATOR": return 15;
                case "RULE_CONDITIONAL_EXPRESSION": return 16;
                case "RULE_NULL_COALESCING_EXPRESSION": return 17;
                case "RULE_CONDITIONAL_OR_EXPRESSION": return 18;
                case "RULE_CONDITIONAL_AND_EXPRESSION": return 19;
                case "RULE_INCLUSIVE_OR_EXPRESSION": return 20;
                case "RULE_EXCLUSIVE_OR_EXPRESSION": return 21;
                case "RULE_AND_EXPRESSION": return 22;
                case "RULE_EQUALITY_EXPRESSION": return 23;
                case "RULE_RELATIONAL_EXPRESSION": return 24;
                case "RULE_SHIFT_EXPRESSION": return 25;
                case "RULE_ADDITIVE_EXPRESSION": return 26;
                case "RULE_MULTIPLICATIVE_EXPRESSION": return 27;
                case "RULE_UNARY_EXPRESSION": return 28;
                case "RULE_PRIMARY_EXPRESSION": return 29;
                case "RULE_PRIMARY_EXPRESSION_START": return 30;
                case "RULE_MEMBER_ACCESS": return 31;
                case "RULE_BRACKET_EXPRESSION": return 32;
                case "RULE_INDEXER_ARGUMENT": return 33;
                case "RULE_PREDEFINED_TYPE": return 34;
                case "RULE_EXPRESSION_LIST": return 35;
                case "RULE_OBJECT_OR_COLLECTION_INITIALIZER": return 36;
                case "RULE_OBJECT_INITIALIZER": return 37;
                case "RULE_MEMBER_INITIALIZER_LIST": return 38;
                case "RULE_MEMBER_INITIALIZER": return 39;
                case "RULE_INITIALIZER_VALUE": return 40;
                case "RULE_COLLECTION_INITIALIZER": return 41;
                case "RULE_ELEMENT_INITIALIZER": return 42;
                case "RULE_ANONYMOUS_OBJECT_INITIALIZER": return 43;
                case "RULE_MEMBER_DECLARATOR_LIST": return 44;
                case "RULE_MEMBER_DECLARATOR": return 45;
                case "RULE_UNBOUND_TYPE_NAME": return 46;
                case "RULE_GENERIC_DIMENSION_SPECIFIER": return 47;
                case "RULE_ISTYPE": return 48;
                case "RULE_LAMBDA_EXPRESSION": return 49;
                case "RULE_ANONYMOUS_FUNCTION_SIGNATURE": return 50;
                case "RULE_EXPLICIT_ANONYMOUS_FUNCTION_PARAMETER_LIST": return 51;
                case "RULE_EXPLICIT_ANONYMOUS_FUNCTION_PARAMETER": return 52;
                case "RULE_IMPLICIT_ANONYMOUS_FUNCTION_PARAMETER_LIST": return 53;
                case "RULE_ANONYMOUS_FUNCTION_BODY": return 54;
                case "RULE_QUERY_EXPRESSION": return 55;
                case "RULE_FROM_CLAUSE": return 56;
                case "RULE_QUERY_BODY": return 57;
                case "RULE_QUERY_BODY_CLAUSE": return 58;
                case "RULE_LET_CLAUSE": return 59;
                case "RULE_WHERE_CLAUSE": return 60;
                case "RULE_COMBINED_JOIN_CLAUSE": return 61;
                case "RULE_ORDERBY_CLAUSE": return 62;
                case "RULE_ORDERING": return 63;
                case "RULE_SELECT_OR_GROUP_CLAUSE": return 64;
                case "RULE_QUERY_CONTINUATION": return 65;
                case "RULE_STATEMENT": return 66;
                case "RULE_EMBEDDED_STATEMENT": return 67;
                case "RULE_SIMPLE_EMBEDDED_STATEMENT": return 68;
                case "RULE_BLOCK": return 69;
                case "RULE_LOCAL_VARIABLE_DECLARATION": return 70;
                case "RULE_LOCAL_VARIABLE_DECLARATOR": return 71;
                case "RULE_LOCAL_VARIABLE_INITIALIZER": return 72;
                case "RULE_LOCAL_CONSTANT_DECLARATION": return 73;
                case "RULE_IF_BODY": return 74;
                case "RULE_SWITCH_SECTION": return 75;
                case "RULE_SWITCH_LABEL": return 76;
                case "RULE_STATEMENT_LIST": return 77;
                case "RULE_FOR_INITIALIZER": return 78;
                case "RULE_FOR_ITERATOR": return 79;
                case "RULE_CATCH_CLAUSES": return 80;
                case "RULE_SPECIFIC_CATCH_CLAUSE": return 81;
                case "RULE_GENERAL_CATCH_CLAUSE": return 82;
                case "RULE_EXCEPTION_FILTER": return 83;
                case "RULE_FINALLY_CLAUSE": return 84;
                case "RULE_RESOURCE_ACQUISITION": return 85;
                case "RULE_NAMESPACE_DECLARATION": return 86;
                case "RULE_QUALIFIED_IDENTIFIER": return 87;
                case "RULE_NAMESPACE_BODY": return 88;
                case "RULE_EXTERN_ALIAS_DIRECTIVES": return 89;
                case "RULE_EXTERN_ALIAS_DIRECTIVE": return 90;
                case "RULE_USING_DIRECTIVES": return 91;
                case "RULE_USING_DIRECTIVE": return 92;
                case "RULE_NAMESPACE_MEMBER_DECLARATIONS": return 93;
                case "RULE_NAMESPACE_MEMBER_DECLARATION": return 94;
                case "RULE_TYPE_DECLARATION": return 95;
                case "RULE_QUALIFIED_ALIAS_MEMBER": return 96;
                case "RULE_TYPE_PARAMETER_LIST": return 97;
                case "RULE_TYPE_PARAMETER": return 98;
                case "RULE_CLASS_BASE": return 99;
                case "RULE_INTERFACE_TYPE_LIST": return 100;
                case "RULE_TYPE_PARAMETER_CONSTRAINTS_CLAUSES": return 101;
                case "RULE_TYPE_PARAMETER_CONSTRAINTS_CLAUSE": return 102;
                case "RULE_TYPE_PARAMETER_CONSTRAINTS": return 103;
                case "RULE_PRIMARY_CONSTRAINT": return 104;
                case "RULE_SECONDARY_CONSTRAINTS": return 105;
                case "RULE_CONSTRUCTOR_CONSTRAINT": return 106;
                case "RULE_CLASS_BODY": return 107;
                case "RULE_CLASS_MEMBER_DECLARATIONS": return 108;
                case "RULE_CLASS_MEMBER_DECLARATION": return 109;
                case "RULE_ALL_MEMBER_MODIFIERS": return 110;
                case "RULE_ALL_MEMBER_MODIFIER": return 111;
                case "RULE_COMMON_MEMBER_DECLARATION": return 112;
                case "RULE_TYPED_MEMBER_DECLARATION": return 113;
                case "RULE_CONSTANT_DECLARATORS": return 114;
                case "RULE_CONSTANT_DECLARATOR": return 115;
                case "RULE_VARIABLE_DECLARATORS": return 116;
                case "RULE_VARIABLE_DECLARATOR": return 117;
                case "RULE_VARIABLE_INITIALIZER": return 118;
                case "RULE_RETURN_TYPE": return 119;
                case "RULE_MEMBER_NAME": return 120;
                case "RULE_METHOD_BODY": return 121;
                case "RULE_FORMAL_PARAMETER_LIST": return 122;
                case "RULE_FIXED_PARAMETERS": return 123;
                case "RULE_FIXED_PARAMETER": return 124;
                case "RULE_PARAMETER_MODIFIER": return 125;
                case "RULE_PARAMETER_ARRAY": return 126;
                case "RULE_ACCESSOR_DECLARATIONS": return 127;
                case "RULE_GET_ACCESSOR_DECLARATION": return 128;
                case "RULE_SET_ACCESSOR_DECLARATION": return 129;
                case "RULE_ACCESSOR_MODIFIER": return 130;
                case "RULE_ACCESSOR_BODY": return 131;
                case "RULE_EVENT_ACCESSOR_DECLARATIONS": return 132;
                case "RULE_ADD_ACCESSOR_DECLARATION": return 133;
                case "RULE_REMOVE_ACCESSOR_DECLARATION": return 134;
                case "RULE_OVERLOADABLE_OPERATOR": return 135;
                case "RULE_CONVERSION_OPERATOR_DECLARATOR": return 136;
                case "RULE_CONSTRUCTOR_INITIALIZER": return 137;
                case "RULE_BODY": return 138;
                case "RULE_STRUCT_INTERFACES": return 139;
                case "RULE_STRUCT_BODY": return 140;
                case "RULE_STRUCT_MEMBER_DECLARATION": return 141;
                case "RULE_ARRAY_TYPE": return 142;
                case "RULE_RANK_SPECIFIER": return 143;
                case "RULE_ARRAY_INITIALIZER": return 144;
                case "RULE_VARIANT_TYPE_PARAMETER_LIST": return 145;
                case "RULE_VARIANT_TYPE_PARAMETER": return 146;
                case "RULE_VARIANCE_ANNOTATION": return 147;
                case "RULE_INTERFACE_BASE": return 148;
                case "RULE_INTERFACE_BODY": return 149;
                case "RULE_INTERFACE_MEMBER_DECLARATION": return 150;
                case "RULE_INTERFACE_ACCESSORS": return 151;
                case "RULE_ENUM_BASE": return 152;
                case "RULE_ENUM_BODY": return 153;
                case "RULE_ENUM_MEMBER_DECLARATION": return 154;
                case "RULE_GLOBAL_ATTRIBUTE_SECTION": return 155;
                case "RULE_GLOBAL_ATTRIBUTE_TARGET": return 156;
                case "RULE_ATTRIBUTES": return 157;
                case "RULE_ATTRIBUTE_SECTION": return 158;
                case "RULE_ATTRIBUTE_TARGET": return 159;
                case "RULE_ATTRIBUTE_LIST": return 160;
                case "RULE_ATTRIBUTE": return 161;
                case "RULE_ATTRIBUTE_ARGUMENT": return 162;
                case "RULE_POINTER_TYPE": return 163;
                case "RULE_FIXED_POINTER_DECLARATORS": return 164;
                case "RULE_FIXED_POINTER_DECLARATOR": return 165;
                case "RULE_FIXED_POINTER_INITIALIZER": return 166;
                case "RULE_FIXED_SIZE_BUFFER_DECLARATOR": return 167;
                case "RULE_LOCAL_VARIABLE_INITIALIZER_UNSAFE": return 168;
                case "RULE_RIGHT_ARROW": return 169;
                case "RULE_RIGHT_SHIFT": return 170;
                case "RULE_RIGHT_SHIFT_ASSIGNMENT": return 171;
                case "RULE_LITERAL": return 172;
                case "RULE_BOOLEAN_LITERAL": return 173;
                case "RULE_STRING_LITERAL": return 174;
                case "RULE_INTERPOLATED_REGULAR_STRING": return 175;
                case "RULE_INTERPOLATED_VERBATIUM_STRING": return 176;
                case "RULE_INTERPOLATED_REGULAR_STRING_PART": return 177;
                case "RULE_INTERPOLATED_VERBATIUM_STRING_PART": return 178;
                case "RULE_INTERPOLATED_STRING_EXPRESSION": return 179;
                case "RULE_KEYWORD": return 180;
                case "RULE_CLASS_DEFINITION": return 181;
                case "RULE_STRUCT_DEFINITION": return 182;
                case "RULE_INTERFACE_DEFINITION": return 183;
                case "RULE_ENUM_DEFINITION": return 184;
                case "RULE_DELEGATE_DEFINITION": return 185;
                case "RULE_EVENT_DECLARATION": return 186;
                case "RULE_FIELD_DECLARATION": return 187;
                case "RULE_PROPERTY_DECLARATION": return 188;
                case "RULE_CONSTANT_DECLARATION": return 189;
                case "RULE_INDEXER_DECLARATION": return 190;
                case "RULE_DESTRUCTOR_DEFINITION": return 191;
                case "RULE_CONSTRUCTOR_DECLARATION": return 192;
                case "RULE_METHOD_DECLARATION": return 193;
                case "RULE_METHOD_MEMBER_NAME": return 194;
                case "RULE_OPERATOR_DECLARATION": return 195;
                case "RULE_ARG_DECLARATION": return 196;
                case "RULE_METHOD_INVOCATION": return 197;
                case "RULE_OBJECT_CREATION_EXPRESSION": return 198;
                case "RULE_IDENTIFIER": return 199;

                default: return -1;
            }
        }

        public static string IndexToName(int index)
        {
            switch(index)
            {
                case 0: return "RULE_compilation_unit";
                case 1: return "RULE_namespace_or_type_name";
                case 2: return "RULE_type";
                case 3: return "RULE_base_type";
                case 4: return "RULE_simple_type";
                case 5: return "RULE_numeric_type";
                case 6: return "RULE_integral_type";
                case 7: return "RULE_floating_point_type";
                case 8: return "RULE_class_type";
                case 9: return "RULE_type_argument_list";
                case 10: return "RULE_argument_list";
                case 11: return "RULE_argument";
                case 12: return "RULE_expression";
                case 13: return "RULE_non_assignment_expression";
                case 14: return "RULE_assignment";
                case 15: return "RULE_assignment_operator";
                case 16: return "RULE_conditional_expression";
                case 17: return "RULE_null_coalescing_expression";
                case 18: return "RULE_conditional_or_expression";
                case 19: return "RULE_conditional_and_expression";
                case 20: return "RULE_inclusive_or_expression";
                case 21: return "RULE_exclusive_or_expression";
                case 22: return "RULE_and_expression";
                case 23: return "RULE_equality_expression";
                case 24: return "RULE_relational_expression";
                case 25: return "RULE_shift_expression";
                case 26: return "RULE_additive_expression";
                case 27: return "RULE_multiplicative_expression";
                case 28: return "RULE_unary_expression";
                case 29: return "RULE_primary_expression";
                case 30: return "RULE_primary_expression_start";
                case 31: return "RULE_member_access";
                case 32: return "RULE_bracket_expression";
                case 33: return "RULE_indexer_argument";
                case 34: return "RULE_predefined_type";
                case 35: return "RULE_expression_list";
                case 36: return "RULE_object_or_collection_initializer";
                case 37: return "RULE_object_initializer";
                case 38: return "RULE_member_initializer_list";
                case 39: return "RULE_member_initializer";
                case 40: return "RULE_initializer_value";
                case 41: return "RULE_collection_initializer";
                case 42: return "RULE_element_initializer";
                case 43: return "RULE_anonymous_object_initializer";
                case 44: return "RULE_member_declarator_list";
                case 45: return "RULE_member_declarator";
                case 46: return "RULE_unbound_type_name";
                case 47: return "RULE_generic_dimension_specifier";
                case 48: return "RULE_isType";
                case 49: return "RULE_lambda_expression";
                case 50: return "RULE_anonymous_function_signature";
                case 51: return "RULE_explicit_anonymous_function_parameter_list";
                case 52: return "RULE_explicit_anonymous_function_parameter";
                case 53: return "RULE_implicit_anonymous_function_parameter_list";
                case 54: return "RULE_anonymous_function_body";
                case 55: return "RULE_query_expression";
                case 56: return "RULE_from_clause";
                case 57: return "RULE_query_body";
                case 58: return "RULE_query_body_clause";
                case 59: return "RULE_let_clause";
                case 60: return "RULE_where_clause";
                case 61: return "RULE_combined_join_clause";
                case 62: return "RULE_orderby_clause";
                case 63: return "RULE_ordering";
                case 64: return "RULE_select_or_group_clause";
                case 65: return "RULE_query_continuation";
                case 66: return "RULE_statement";
                case 67: return "RULE_embedded_statement";
                case 68: return "RULE_simple_embedded_statement";
                case 69: return "RULE_block";
                case 70: return "RULE_local_variable_declaration";
                case 71: return "RULE_local_variable_declarator";
                case 72: return "RULE_local_variable_initializer";
                case 73: return "RULE_local_constant_declaration";
                case 74: return "RULE_if_body";
                case 75: return "RULE_switch_section";
                case 76: return "RULE_switch_label";
                case 77: return "RULE_statement_list";
                case 78: return "RULE_for_initializer";
                case 79: return "RULE_for_iterator";
                case 80: return "RULE_catch_clauses";
                case 81: return "RULE_specific_catch_clause";
                case 82: return "RULE_general_catch_clause";
                case 83: return "RULE_exception_filter";
                case 84: return "RULE_finally_clause";
                case 85: return "RULE_resource_acquisition";
                case 86: return "RULE_namespace_declaration";
                case 87: return "RULE_qualified_identifier";
                case 88: return "RULE_namespace_body";
                case 89: return "RULE_extern_alias_directives";
                case 90: return "RULE_extern_alias_directive";
                case 91: return "RULE_using_directives";
                case 92: return "RULE_using_directive";
                case 93: return "RULE_namespace_member_declarations";
                case 94: return "RULE_namespace_member_declaration";
                case 95: return "RULE_type_declaration";
                case 96: return "RULE_qualified_alias_member";
                case 97: return "RULE_type_parameter_list";
                case 98: return "RULE_type_parameter";
                case 99: return "RULE_class_base";
                case 100: return "RULE_interface_type_list";
                case 101: return "RULE_type_parameter_constraints_clauses";
                case 102: return "RULE_type_parameter_constraints_clause";
                case 103: return "RULE_type_parameter_constraints";
                case 104: return "RULE_primary_constraint";
                case 105: return "RULE_secondary_constraints";
                case 106: return "RULE_constructor_constraint";
                case 107: return "RULE_class_body";
                case 108: return "RULE_class_member_declarations";
                case 109: return "RULE_class_member_declaration";
                case 110: return "RULE_all_member_modifiers";
                case 111: return "RULE_all_member_modifier";
                case 112: return "RULE_common_member_declaration";
                case 113: return "RULE_typed_member_declaration";
                case 114: return "RULE_constant_declarators";
                case 115: return "RULE_constant_declarator";
                case 116: return "RULE_variable_declarators";
                case 117: return "RULE_variable_declarator";
                case 118: return "RULE_variable_initializer";
                case 119: return "RULE_return_type";
                case 120: return "RULE_member_name";
                case 121: return "RULE_method_body";
                case 122: return "RULE_formal_parameter_list";
                case 123: return "RULE_fixed_parameters";
                case 124: return "RULE_fixed_parameter";
                case 125: return "RULE_parameter_modifier";
                case 126: return "RULE_parameter_array";
                case 127: return "RULE_accessor_declarations";
                case 128: return "RULE_get_accessor_declaration";
                case 129: return "RULE_set_accessor_declaration";
                case 130: return "RULE_accessor_modifier";
                case 131: return "RULE_accessor_body";
                case 132: return "RULE_event_accessor_declarations";
                case 133: return "RULE_add_accessor_declaration";
                case 134: return "RULE_remove_accessor_declaration";
                case 135: return "RULE_overloadable_operator";
                case 136: return "RULE_conversion_operator_declarator";
                case 137: return "RULE_constructor_initializer";
                case 138: return "RULE_body";
                case 139: return "RULE_struct_interfaces";
                case 140: return "RULE_struct_body";
                case 141: return "RULE_struct_member_declaration";
                case 142: return "RULE_array_type";
                case 143: return "RULE_rank_specifier";
                case 144: return "RULE_array_initializer";
                case 145: return "RULE_variant_type_parameter_list";
                case 146: return "RULE_variant_type_parameter";
                case 147: return "RULE_variance_annotation";
                case 148: return "RULE_interface_base";
                case 149: return "RULE_interface_body";
                case 150: return "RULE_interface_member_declaration";
                case 151: return "RULE_interface_accessors";
                case 152: return "RULE_enum_base";
                case 153: return "RULE_enum_body";
                case 154: return "RULE_enum_member_declaration";
                case 155: return "RULE_global_attribute_section";
                case 156: return "RULE_global_attribute_target";
                case 157: return "RULE_attributes";
                case 158: return "RULE_attribute_section";
                case 159: return "RULE_attribute_target";
                case 160: return "RULE_attribute_list";
                case 161: return "RULE_attribute";
                case 162: return "RULE_attribute_argument";
                case 163: return "RULE_pointer_type";
                case 164: return "RULE_fixed_pointer_declarators";
                case 165: return "RULE_fixed_pointer_declarator";
                case 166: return "RULE_fixed_pointer_initializer";
                case 167: return "RULE_fixed_size_buffer_declarator";
                case 168: return "RULE_local_variable_initializer_unsafe";
                case 169: return "RULE_right_arrow";
                case 170: return "RULE_right_shift";
                case 171: return "RULE_right_shift_assignment";
                case 172: return "RULE_literal";
                case 173: return "RULE_boolean_literal";
                case 174: return "RULE_string_literal";
                case 175: return "RULE_interpolated_regular_string";
                case 176: return "RULE_interpolated_verbatium_string";
                case 177: return "RULE_interpolated_regular_string_part";
                case 178: return "RULE_interpolated_verbatium_string_part";
                case 179: return "RULE_interpolated_string_expression";
                case 180: return "RULE_keyword";
                case 181: return "RULE_class_definition";
                case 182: return "RULE_struct_definition";
                case 183: return "RULE_interface_definition";
                case 184: return "RULE_enum_definition";
                case 185: return "RULE_delegate_definition";
                case 186: return "RULE_event_declaration";
                case 187: return "RULE_field_declaration";
                case 188: return "RULE_property_declaration";
                case 189: return "RULE_constant_declaration";
                case 190: return "RULE_indexer_declaration";
                case 191: return "RULE_destructor_definition";
                case 192: return "RULE_constructor_declaration";
                case 193: return "RULE_method_declaration";
                case 194: return "RULE_method_member_name";
                case 195: return "RULE_operator_declaration";
                case 196: return "RULE_arg_declaration";
                case 197: return "RULE_method_invocation";
                case 198: return "RULE_object_creation_expression";
                case 199: return "RULE_identifier";

                default: return string.Empty;
            }
        }

    }
}
