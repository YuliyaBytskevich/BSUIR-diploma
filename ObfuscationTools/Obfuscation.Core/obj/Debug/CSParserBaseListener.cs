//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\julia\Desktop\BSUIR.Diploma\ObfuscationTools\Obfuscation.Core\CSharpAnalysis\CSParser.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Obfuscation.Core.CSharpAnalysis {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICSParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class CSParserBaseListener : ICSParserListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>literalAccessExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralAccessExpression([NotNull] CSParser.LiteralAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literalAccessExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralAccessExpression([NotNull] CSParser.LiteralAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultValueExpression([NotNull] CSParser.DefaultValueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defaultValueExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultValueExpression([NotNull] CSParser.DefaultValueExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>baseAccessExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseAccessExpression([NotNull] CSParser.BaseAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>baseAccessExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseAccessExpression([NotNull] CSParser.BaseAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>sizeofExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSizeofExpression([NotNull] CSParser.SizeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sizeofExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSizeofExpression([NotNull] CSParser.SizeofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpressions([NotNull] CSParser.ParenthesisExpressionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpressions</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpressions([NotNull] CSParser.ParenthesisExpressionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThisReferenceExpression([NotNull] CSParser.ThisReferenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>thisReferenceExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThisReferenceExpression([NotNull] CSParser.ThisReferenceExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>objectCreationExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectCreationExpression([NotNull] CSParser.ObjectCreationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>objectCreationExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectCreationExpression([NotNull] CSParser.ObjectCreationExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>anonymousMethodExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymousMethodExpression([NotNull] CSParser.AnonymousMethodExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>anonymousMethodExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymousMethodExpression([NotNull] CSParser.AnonymousMethodExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofExpression([NotNull] CSParser.TypeofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofExpression([NotNull] CSParser.TypeofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>uncheckedExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUncheckedExpression([NotNull] CSParser.UncheckedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>uncheckedExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUncheckedExpression([NotNull] CSParser.UncheckedExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleNameExpression([NotNull] CSParser.SimpleNameExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleNameExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleNameExpression([NotNull] CSParser.SimpleNameExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccessExpression([NotNull] CSParser.MemberAccessExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>memberAccessExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccessExpression([NotNull] CSParser.MemberAccessExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>checkedExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCheckedExpression([NotNull] CSParser.CheckedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>checkedExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCheckedExpression([NotNull] CSParser.CheckedExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] CSParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] CSParser.LiteralExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>nameofExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameofExpression([NotNull] CSParser.NameofExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nameofExpression</c>
	/// labeled alternative in <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameofExpression([NotNull] CSParser.NameofExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationStatement([NotNull] CSParser.DeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationStatement</c>
	/// labeled alternative in <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationStatement([NotNull] CSParser.DeclarationStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>embeddedStatement</c>
	/// labeled alternative in <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbeddedStatement([NotNull] CSParser.EmbeddedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>embeddedStatement</c>
	/// labeled alternative in <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbeddedStatement([NotNull] CSParser.EmbeddedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>labeledStatement</c>
	/// labeled alternative in <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabeledStatement([NotNull] CSParser.LabeledStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>labeledStatement</c>
	/// labeled alternative in <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabeledStatement([NotNull] CSParser.LabeledStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>usingAliasDirective</c>
	/// labeled alternative in <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingAliasDirective([NotNull] CSParser.UsingAliasDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>usingAliasDirective</c>
	/// labeled alternative in <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingAliasDirective([NotNull] CSParser.UsingAliasDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>usingNamespaceDirective</c>
	/// labeled alternative in <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingNamespaceDirective([NotNull] CSParser.UsingNamespaceDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>usingNamespaceDirective</c>
	/// labeled alternative in <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingNamespaceDirective([NotNull] CSParser.UsingNamespaceDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>usingStaticDirective</c>
	/// labeled alternative in <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStaticDirective([NotNull] CSParser.UsingStaticDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>usingStaticDirective</c>
	/// labeled alternative in <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStaticDirective([NotNull] CSParser.UsingStaticDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptyStatement([NotNull] CSParser.EmptyStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>emptyStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptyStatement([NotNull] CSParser.EmptyStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>tryStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTryStatement([NotNull] CSParser.TryStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tryStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTryStatement([NotNull] CSParser.TryStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>checkedStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCheckedStatement([NotNull] CSParser.CheckedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>checkedStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCheckedStatement([NotNull] CSParser.CheckedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThrowStatement([NotNull] CSParser.ThrowStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>throwStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThrowStatement([NotNull] CSParser.ThrowStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>foreschStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeschStatement([NotNull] CSParser.ForeschStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>foreschStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeschStatement([NotNull] CSParser.ForeschStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>unsafeStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnsafeStatement([NotNull] CSParser.UnsafeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unsafeStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnsafeStatement([NotNull] CSParser.UnsafeStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStatement([NotNull] CSParser.ForStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStatement([NotNull] CSParser.ForStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStatement([NotNull] CSParser.BreakStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>breakStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStatement([NotNull] CSParser.BreakStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] CSParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] CSParser.IfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] CSParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>returnStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] CSParser.ReturnStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>gotoStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGotoStatement([NotNull] CSParser.GotoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>gotoStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGotoStatement([NotNull] CSParser.GotoStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] CSParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>switchStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] CSParser.SwitchStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>fixedStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedStatement([NotNull] CSParser.FixedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fixedStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedStatement([NotNull] CSParser.FixedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStatement([NotNull] CSParser.WhileStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStatement([NotNull] CSParser.WhileStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>doStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoStatement([NotNull] CSParser.DoStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>doStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoStatement([NotNull] CSParser.DoStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>uncheckedStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUncheckedStatement([NotNull] CSParser.UncheckedStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>uncheckedStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUncheckedStatement([NotNull] CSParser.UncheckedStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] CSParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expressionStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] CSParser.ExpressionStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueStatement([NotNull] CSParser.ContinueStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>continueStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueStatement([NotNull] CSParser.ContinueStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>usingStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsingStatement([NotNull] CSParser.UsingStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>usingStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsingStatement([NotNull] CSParser.UsingStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>lockStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLockStatement([NotNull] CSParser.LockStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lockStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLockStatement([NotNull] CSParser.LockStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>yieldStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYieldStatement([NotNull] CSParser.YieldStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>yieldStatement</c>
	/// labeled alternative in <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYieldStatement([NotNull] CSParser.YieldStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilation_unit([NotNull] CSParser.Compilation_unitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.compilation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilation_unit([NotNull] CSParser.Compilation_unitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.namespace_or_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_or_type_name([NotNull] CSParser.Namespace_or_type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.namespace_or_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_or_type_name([NotNull] CSParser.Namespace_or_type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] CSParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] CSParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBase_type([NotNull] CSParser.Base_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.base_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBase_type([NotNull] CSParser.Base_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.simple_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_type([NotNull] CSParser.Simple_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.simple_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_type([NotNull] CSParser.Simple_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_type([NotNull] CSParser.Numeric_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.numeric_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_type([NotNull] CSParser.Numeric_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.integral_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegral_type([NotNull] CSParser.Integral_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.integral_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegral_type([NotNull] CSParser.Integral_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.floating_point_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloating_point_type([NotNull] CSParser.Floating_point_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.floating_point_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloating_point_type([NotNull] CSParser.Floating_point_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.class_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_type([NotNull] CSParser.Class_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.class_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_type([NotNull] CSParser.Class_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_argument_list([NotNull] CSParser.Type_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_argument_list([NotNull] CSParser.Type_argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument_list([NotNull] CSParser.Argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument_list([NotNull] CSParser.Argument_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] CSParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] CSParser.ArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CSParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CSParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.non_assignment_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNon_assignment_expression([NotNull] CSParser.Non_assignment_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.non_assignment_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNon_assignment_expression([NotNull] CSParser.Non_assignment_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] CSParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] CSParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_operator([NotNull] CSParser.Assignment_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.assignment_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_operator([NotNull] CSParser.Assignment_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_expression([NotNull] CSParser.Conditional_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.conditional_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_expression([NotNull] CSParser.Conditional_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.null_coalescing_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNull_coalescing_expression([NotNull] CSParser.Null_coalescing_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.null_coalescing_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNull_coalescing_expression([NotNull] CSParser.Null_coalescing_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.conditional_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_or_expression([NotNull] CSParser.Conditional_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.conditional_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_or_expression([NotNull] CSParser.Conditional_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.conditional_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditional_and_expression([NotNull] CSParser.Conditional_and_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.conditional_and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditional_and_expression([NotNull] CSParser.Conditional_and_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInclusive_or_expression([NotNull] CSParser.Inclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.inclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInclusive_or_expression([NotNull] CSParser.Inclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExclusive_or_expression([NotNull] CSParser.Exclusive_or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.exclusive_or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExclusive_or_expression([NotNull] CSParser.Exclusive_or_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_expression([NotNull] CSParser.And_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_expression([NotNull] CSParser.And_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expression([NotNull] CSParser.Equality_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.equality_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expression([NotNull] CSParser.Equality_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelational_expression([NotNull] CSParser.Relational_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.relational_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelational_expression([NotNull] CSParser.Relational_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_expression([NotNull] CSParser.Shift_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.shift_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_expression([NotNull] CSParser.Shift_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditive_expression([NotNull] CSParser.Additive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.additive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditive_expression([NotNull] CSParser.Additive_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicative_expression([NotNull] CSParser.Multiplicative_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.multiplicative_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicative_expression([NotNull] CSParser.Multiplicative_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_expression([NotNull] CSParser.Unary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.unary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_expression([NotNull] CSParser.Unary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression([NotNull] CSParser.Primary_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.primary_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression([NotNull] CSParser.Primary_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_expression_start([NotNull] CSParser.Primary_expression_startContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.primary_expression_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_expression_start([NotNull] CSParser.Primary_expression_startContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.member_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_access([NotNull] CSParser.Member_accessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.member_access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_access([NotNull] CSParser.Member_accessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.bracket_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracket_expression([NotNull] CSParser.Bracket_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.bracket_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracket_expression([NotNull] CSParser.Bracket_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.indexer_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexer_argument([NotNull] CSParser.Indexer_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.indexer_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexer_argument([NotNull] CSParser.Indexer_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredefined_type([NotNull] CSParser.Predefined_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.predefined_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredefined_type([NotNull] CSParser.Predefined_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] CSParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] CSParser.Expression_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.object_or_collection_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_or_collection_initializer([NotNull] CSParser.Object_or_collection_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.object_or_collection_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_or_collection_initializer([NotNull] CSParser.Object_or_collection_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.object_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_initializer([NotNull] CSParser.Object_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.object_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_initializer([NotNull] CSParser.Object_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.member_initializer_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_initializer_list([NotNull] CSParser.Member_initializer_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.member_initializer_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_initializer_list([NotNull] CSParser.Member_initializer_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.member_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_initializer([NotNull] CSParser.Member_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.member_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_initializer([NotNull] CSParser.Member_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.initializer_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer_value([NotNull] CSParser.Initializer_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.initializer_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer_value([NotNull] CSParser.Initializer_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.collection_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection_initializer([NotNull] CSParser.Collection_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.collection_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection_initializer([NotNull] CSParser.Collection_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.element_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElement_initializer([NotNull] CSParser.Element_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.element_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElement_initializer([NotNull] CSParser.Element_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.anonymous_object_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_object_initializer([NotNull] CSParser.Anonymous_object_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.anonymous_object_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_object_initializer([NotNull] CSParser.Anonymous_object_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.member_declarator_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_declarator_list([NotNull] CSParser.Member_declarator_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.member_declarator_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_declarator_list([NotNull] CSParser.Member_declarator_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.member_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_declarator([NotNull] CSParser.Member_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.member_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_declarator([NotNull] CSParser.Member_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.unbound_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnbound_type_name([NotNull] CSParser.Unbound_type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.unbound_type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnbound_type_name([NotNull] CSParser.Unbound_type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.generic_dimension_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneric_dimension_specifier([NotNull] CSParser.Generic_dimension_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.generic_dimension_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneric_dimension_specifier([NotNull] CSParser.Generic_dimension_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.isType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsType([NotNull] CSParser.IsTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.isType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsType([NotNull] CSParser.IsTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.lambda_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLambda_expression([NotNull] CSParser.Lambda_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.lambda_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLambda_expression([NotNull] CSParser.Lambda_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.anonymous_function_signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_function_signature([NotNull] CSParser.Anonymous_function_signatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.anonymous_function_signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_function_signature([NotNull] CSParser.Anonymous_function_signatureContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.explicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicit_anonymous_function_parameter_list([NotNull] CSParser.Explicit_anonymous_function_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.explicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicit_anonymous_function_parameter_list([NotNull] CSParser.Explicit_anonymous_function_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.explicit_anonymous_function_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicit_anonymous_function_parameter([NotNull] CSParser.Explicit_anonymous_function_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.explicit_anonymous_function_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicit_anonymous_function_parameter([NotNull] CSParser.Explicit_anonymous_function_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.implicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicit_anonymous_function_parameter_list([NotNull] CSParser.Implicit_anonymous_function_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.implicit_anonymous_function_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicit_anonymous_function_parameter_list([NotNull] CSParser.Implicit_anonymous_function_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.anonymous_function_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_function_body([NotNull] CSParser.Anonymous_function_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.anonymous_function_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_function_body([NotNull] CSParser.Anonymous_function_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_expression([NotNull] CSParser.Query_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.query_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_expression([NotNull] CSParser.Query_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFrom_clause([NotNull] CSParser.From_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.from_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFrom_clause([NotNull] CSParser.From_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.query_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_body([NotNull] CSParser.Query_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.query_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_body([NotNull] CSParser.Query_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.query_body_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_body_clause([NotNull] CSParser.Query_body_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.query_body_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_body_clause([NotNull] CSParser.Query_body_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.let_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLet_clause([NotNull] CSParser.Let_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.let_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLet_clause([NotNull] CSParser.Let_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_clause([NotNull] CSParser.Where_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.where_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_clause([NotNull] CSParser.Where_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.combined_join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCombined_join_clause([NotNull] CSParser.Combined_join_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.combined_join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCombined_join_clause([NotNull] CSParser.Combined_join_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.orderby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderby_clause([NotNull] CSParser.Orderby_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.orderby_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderby_clause([NotNull] CSParser.Orderby_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdering([NotNull] CSParser.OrderingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.ordering"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdering([NotNull] CSParser.OrderingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.select_or_group_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_or_group_clause([NotNull] CSParser.Select_or_group_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.select_or_group_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_or_group_clause([NotNull] CSParser.Select_or_group_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.query_continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery_continuation([NotNull] CSParser.Query_continuationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.query_continuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery_continuation([NotNull] CSParser.Query_continuationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CSParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CSParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmbedded_statement([NotNull] CSParser.Embedded_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmbedded_statement([NotNull] CSParser.Embedded_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_embedded_statement([NotNull] CSParser.Simple_embedded_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.simple_embedded_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_embedded_statement([NotNull] CSParser.Simple_embedded_statementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CSParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CSParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.local_variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_declaration([NotNull] CSParser.Local_variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.local_variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_declaration([NotNull] CSParser.Local_variable_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.local_variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_declarator([NotNull] CSParser.Local_variable_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.local_variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_declarator([NotNull] CSParser.Local_variable_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.local_variable_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_initializer([NotNull] CSParser.Local_variable_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.local_variable_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_initializer([NotNull] CSParser.Local_variable_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.local_constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_constant_declaration([NotNull] CSParser.Local_constant_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.local_constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_constant_declaration([NotNull] CSParser.Local_constant_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.if_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_body([NotNull] CSParser.If_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.if_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_body([NotNull] CSParser.If_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.switch_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_section([NotNull] CSParser.Switch_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.switch_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_section([NotNull] CSParser.Switch_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.switch_label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_label([NotNull] CSParser.Switch_labelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.switch_label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_label([NotNull] CSParser.Switch_labelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_list([NotNull] CSParser.Statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_list([NotNull] CSParser.Statement_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.for_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_initializer([NotNull] CSParser.For_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.for_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_initializer([NotNull] CSParser.For_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.for_iterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_iterator([NotNull] CSParser.For_iteratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.for_iterator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_iterator([NotNull] CSParser.For_iteratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.catch_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatch_clauses([NotNull] CSParser.Catch_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.catch_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatch_clauses([NotNull] CSParser.Catch_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.specific_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpecific_catch_clause([NotNull] CSParser.Specific_catch_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.specific_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpecific_catch_clause([NotNull] CSParser.Specific_catch_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.general_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGeneral_catch_clause([NotNull] CSParser.General_catch_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.general_catch_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGeneral_catch_clause([NotNull] CSParser.General_catch_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.exception_filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterException_filter([NotNull] CSParser.Exception_filterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.exception_filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitException_filter([NotNull] CSParser.Exception_filterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.finally_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinally_clause([NotNull] CSParser.Finally_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.finally_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinally_clause([NotNull] CSParser.Finally_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.resource_acquisition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResource_acquisition([NotNull] CSParser.Resource_acquisitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.resource_acquisition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResource_acquisition([NotNull] CSParser.Resource_acquisitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_declaration([NotNull] CSParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_declaration([NotNull] CSParser.Namespace_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.qualified_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_identifier([NotNull] CSParser.Qualified_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.qualified_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_identifier([NotNull] CSParser.Qualified_identifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.namespace_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_body([NotNull] CSParser.Namespace_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.namespace_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_body([NotNull] CSParser.Namespace_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.extern_alias_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtern_alias_directives([NotNull] CSParser.Extern_alias_directivesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.extern_alias_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtern_alias_directives([NotNull] CSParser.Extern_alias_directivesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.extern_alias_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExtern_alias_directive([NotNull] CSParser.Extern_alias_directiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.extern_alias_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExtern_alias_directive([NotNull] CSParser.Extern_alias_directiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.using_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_directives([NotNull] CSParser.Using_directivesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.using_directives"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_directives([NotNull] CSParser.Using_directivesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_directive([NotNull] CSParser.Using_directiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.using_directive"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_directive([NotNull] CSParser.Using_directiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.namespace_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_member_declarations([NotNull] CSParser.Namespace_member_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.namespace_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_member_declarations([NotNull] CSParser.Namespace_member_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_member_declaration([NotNull] CSParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_member_declaration([NotNull] CSParser.Namespace_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration([NotNull] CSParser.Type_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration([NotNull] CSParser.Type_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.qualified_alias_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_alias_member([NotNull] CSParser.Qualified_alias_memberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.qualified_alias_member"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_alias_member([NotNull] CSParser.Qualified_alias_memberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_list([NotNull] CSParser.Type_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_list([NotNull] CSParser.Type_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter([NotNull] CSParser.Type_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter([NotNull] CSParser.Type_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.class_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_base([NotNull] CSParser.Class_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.class_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_base([NotNull] CSParser.Class_baseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interface_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_type_list([NotNull] CSParser.Interface_type_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interface_type_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_type_list([NotNull] CSParser.Interface_type_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_parameter_constraints_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_constraints_clauses([NotNull] CSParser.Type_parameter_constraints_clausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_parameter_constraints_clauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_constraints_clauses([NotNull] CSParser.Type_parameter_constraints_clausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_parameter_constraints_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_constraints_clause([NotNull] CSParser.Type_parameter_constraints_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_parameter_constraints_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_constraints_clause([NotNull] CSParser.Type_parameter_constraints_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.type_parameter_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_parameter_constraints([NotNull] CSParser.Type_parameter_constraintsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.type_parameter_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_parameter_constraints([NotNull] CSParser.Type_parameter_constraintsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.primary_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary_constraint([NotNull] CSParser.Primary_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.primary_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary_constraint([NotNull] CSParser.Primary_constraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.secondary_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSecondary_constraints([NotNull] CSParser.Secondary_constraintsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.secondary_constraints"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSecondary_constraints([NotNull] CSParser.Secondary_constraintsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.constructor_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_constraint([NotNull] CSParser.Constructor_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.constructor_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_constraint([NotNull] CSParser.Constructor_constraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_body([NotNull] CSParser.Class_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_body([NotNull] CSParser.Class_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.class_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_member_declarations([NotNull] CSParser.Class_member_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.class_member_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_member_declarations([NotNull] CSParser.Class_member_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_member_declaration([NotNull] CSParser.Class_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_member_declaration([NotNull] CSParser.Class_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.all_member_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAll_member_modifiers([NotNull] CSParser.All_member_modifiersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.all_member_modifiers"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAll_member_modifiers([NotNull] CSParser.All_member_modifiersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.all_member_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAll_member_modifier([NotNull] CSParser.All_member_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.all_member_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAll_member_modifier([NotNull] CSParser.All_member_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.common_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommon_member_declaration([NotNull] CSParser.Common_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.common_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommon_member_declaration([NotNull] CSParser.Common_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.typed_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTyped_member_declaration([NotNull] CSParser.Typed_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.typed_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTyped_member_declaration([NotNull] CSParser.Typed_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.constant_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_declarators([NotNull] CSParser.Constant_declaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.constant_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_declarators([NotNull] CSParser.Constant_declaratorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.constant_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_declarator([NotNull] CSParser.Constant_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.constant_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_declarator([NotNull] CSParser.Constant_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.variable_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarators([NotNull] CSParser.Variable_declaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.variable_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarators([NotNull] CSParser.Variable_declaratorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declarator([NotNull] CSParser.Variable_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.variable_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declarator([NotNull] CSParser.Variable_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.variable_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_initializer([NotNull] CSParser.Variable_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.variable_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_initializer([NotNull] CSParser.Variable_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_type([NotNull] CSParser.Return_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_type([NotNull] CSParser.Return_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_name([NotNull] CSParser.Member_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_name([NotNull] CSParser.Member_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_body([NotNull] CSParser.Method_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_body([NotNull] CSParser.Method_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.formal_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormal_parameter_list([NotNull] CSParser.Formal_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.formal_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormal_parameter_list([NotNull] CSParser.Formal_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.fixed_parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_parameters([NotNull] CSParser.Fixed_parametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.fixed_parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_parameters([NotNull] CSParser.Fixed_parametersContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.fixed_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_parameter([NotNull] CSParser.Fixed_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.fixed_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_parameter([NotNull] CSParser.Fixed_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.parameter_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_modifier([NotNull] CSParser.Parameter_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.parameter_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_modifier([NotNull] CSParser.Parameter_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.parameter_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_array([NotNull] CSParser.Parameter_arrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.parameter_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_array([NotNull] CSParser.Parameter_arrayContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessor_declarations([NotNull] CSParser.Accessor_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessor_declarations([NotNull] CSParser.Accessor_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.get_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGet_accessor_declaration([NotNull] CSParser.Get_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.get_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGet_accessor_declaration([NotNull] CSParser.Get_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.set_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSet_accessor_declaration([NotNull] CSParser.Set_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.set_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSet_accessor_declaration([NotNull] CSParser.Set_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.accessor_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessor_modifier([NotNull] CSParser.Accessor_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.accessor_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessor_modifier([NotNull] CSParser.Accessor_modifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.accessor_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessor_body([NotNull] CSParser.Accessor_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.accessor_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessor_body([NotNull] CSParser.Accessor_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.event_accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvent_accessor_declarations([NotNull] CSParser.Event_accessor_declarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.event_accessor_declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvent_accessor_declarations([NotNull] CSParser.Event_accessor_declarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.add_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_accessor_declaration([NotNull] CSParser.Add_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.add_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_accessor_declaration([NotNull] CSParser.Add_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.remove_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemove_accessor_declaration([NotNull] CSParser.Remove_accessor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.remove_accessor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemove_accessor_declaration([NotNull] CSParser.Remove_accessor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.overloadable_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOverloadable_operator([NotNull] CSParser.Overloadable_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.overloadable_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOverloadable_operator([NotNull] CSParser.Overloadable_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.conversion_operator_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConversion_operator_declarator([NotNull] CSParser.Conversion_operator_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.conversion_operator_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConversion_operator_declarator([NotNull] CSParser.Conversion_operator_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.constructor_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_initializer([NotNull] CSParser.Constructor_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.constructor_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_initializer([NotNull] CSParser.Constructor_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] CSParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] CSParser.BodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.struct_interfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_interfaces([NotNull] CSParser.Struct_interfacesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.struct_interfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_interfaces([NotNull] CSParser.Struct_interfacesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.struct_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_body([NotNull] CSParser.Struct_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.struct_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_body([NotNull] CSParser.Struct_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.struct_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_member_declaration([NotNull] CSParser.Struct_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.struct_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_member_declaration([NotNull] CSParser.Struct_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.array_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray_type([NotNull] CSParser.Array_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.array_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray_type([NotNull] CSParser.Array_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.rank_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRank_specifier([NotNull] CSParser.Rank_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.rank_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRank_specifier([NotNull] CSParser.Rank_specifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.array_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArray_initializer([NotNull] CSParser.Array_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.array_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArray_initializer([NotNull] CSParser.Array_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.variant_type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariant_type_parameter_list([NotNull] CSParser.Variant_type_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.variant_type_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariant_type_parameter_list([NotNull] CSParser.Variant_type_parameter_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.variant_type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariant_type_parameter([NotNull] CSParser.Variant_type_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.variant_type_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariant_type_parameter([NotNull] CSParser.Variant_type_parameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.variance_annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariance_annotation([NotNull] CSParser.Variance_annotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.variance_annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariance_annotation([NotNull] CSParser.Variance_annotationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interface_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_base([NotNull] CSParser.Interface_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interface_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_base([NotNull] CSParser.Interface_baseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interface_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_body([NotNull] CSParser.Interface_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interface_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_body([NotNull] CSParser.Interface_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interface_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_member_declaration([NotNull] CSParser.Interface_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interface_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_member_declaration([NotNull] CSParser.Interface_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interface_accessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_accessors([NotNull] CSParser.Interface_accessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interface_accessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_accessors([NotNull] CSParser.Interface_accessorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.enum_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_base([NotNull] CSParser.Enum_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.enum_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_base([NotNull] CSParser.Enum_baseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.enum_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_body([NotNull] CSParser.Enum_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.enum_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_body([NotNull] CSParser.Enum_bodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.enum_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_member_declaration([NotNull] CSParser.Enum_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.enum_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_member_declaration([NotNull] CSParser.Enum_member_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.global_attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobal_attribute_section([NotNull] CSParser.Global_attribute_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.global_attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobal_attribute_section([NotNull] CSParser.Global_attribute_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.global_attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobal_attribute_target([NotNull] CSParser.Global_attribute_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.global_attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobal_attribute_target([NotNull] CSParser.Global_attribute_targetContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributes([NotNull] CSParser.AttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.attributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributes([NotNull] CSParser.AttributesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_section([NotNull] CSParser.Attribute_sectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.attribute_section"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_section([NotNull] CSParser.Attribute_sectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_target([NotNull] CSParser.Attribute_targetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.attribute_target"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_target([NotNull] CSParser.Attribute_targetContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.attribute_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_list([NotNull] CSParser.Attribute_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.attribute_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_list([NotNull] CSParser.Attribute_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] CSParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] CSParser.AttributeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.attribute_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_argument([NotNull] CSParser.Attribute_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.attribute_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_argument([NotNull] CSParser.Attribute_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.pointer_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointer_type([NotNull] CSParser.Pointer_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.pointer_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointer_type([NotNull] CSParser.Pointer_typeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.fixed_pointer_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_pointer_declarators([NotNull] CSParser.Fixed_pointer_declaratorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.fixed_pointer_declarators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_pointer_declarators([NotNull] CSParser.Fixed_pointer_declaratorsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.fixed_pointer_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_pointer_declarator([NotNull] CSParser.Fixed_pointer_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.fixed_pointer_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_pointer_declarator([NotNull] CSParser.Fixed_pointer_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.fixed_pointer_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_pointer_initializer([NotNull] CSParser.Fixed_pointer_initializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.fixed_pointer_initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_pointer_initializer([NotNull] CSParser.Fixed_pointer_initializerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.fixed_size_buffer_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_size_buffer_declarator([NotNull] CSParser.Fixed_size_buffer_declaratorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.fixed_size_buffer_declarator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_size_buffer_declarator([NotNull] CSParser.Fixed_size_buffer_declaratorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.local_variable_initializer_unsafe"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocal_variable_initializer_unsafe([NotNull] CSParser.Local_variable_initializer_unsafeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.local_variable_initializer_unsafe"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocal_variable_initializer_unsafe([NotNull] CSParser.Local_variable_initializer_unsafeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.right_arrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight_arrow([NotNull] CSParser.Right_arrowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.right_arrow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight_arrow([NotNull] CSParser.Right_arrowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.right_shift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight_shift([NotNull] CSParser.Right_shiftContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.right_shift"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight_shift([NotNull] CSParser.Right_shiftContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.right_shift_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRight_shift_assignment([NotNull] CSParser.Right_shift_assignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.right_shift_assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRight_shift_assignment([NotNull] CSParser.Right_shift_assignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] CSParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] CSParser.LiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolean_literal([NotNull] CSParser.Boolean_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.boolean_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolean_literal([NotNull] CSParser.Boolean_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.string_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString_literal([NotNull] CSParser.String_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.string_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString_literal([NotNull] CSParser.String_literalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interpolated_regular_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_regular_string([NotNull] CSParser.Interpolated_regular_stringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interpolated_regular_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_regular_string([NotNull] CSParser.Interpolated_regular_stringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interpolated_verbatium_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_verbatium_string([NotNull] CSParser.Interpolated_verbatium_stringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interpolated_verbatium_string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_verbatium_string([NotNull] CSParser.Interpolated_verbatium_stringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interpolated_regular_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_regular_string_part([NotNull] CSParser.Interpolated_regular_string_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interpolated_regular_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_regular_string_part([NotNull] CSParser.Interpolated_regular_string_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interpolated_verbatium_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_verbatium_string_part([NotNull] CSParser.Interpolated_verbatium_string_partContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interpolated_verbatium_string_part"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_verbatium_string_part([NotNull] CSParser.Interpolated_verbatium_string_partContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interpolated_string_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterpolated_string_expression([NotNull] CSParser.Interpolated_string_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interpolated_string_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterpolated_string_expression([NotNull] CSParser.Interpolated_string_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] CSParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] CSParser.KeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.class_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_definition([NotNull] CSParser.Class_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.class_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_definition([NotNull] CSParser.Class_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_definition([NotNull] CSParser.Struct_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.struct_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_definition([NotNull] CSParser.Struct_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.interface_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_definition([NotNull] CSParser.Interface_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.interface_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_definition([NotNull] CSParser.Interface_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.enum_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_definition([NotNull] CSParser.Enum_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.enum_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_definition([NotNull] CSParser.Enum_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.delegate_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelegate_definition([NotNull] CSParser.Delegate_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.delegate_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelegate_definition([NotNull] CSParser.Delegate_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.event_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvent_declaration([NotNull] CSParser.Event_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.event_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvent_declaration([NotNull] CSParser.Event_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.field_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField_declaration([NotNull] CSParser.Field_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.field_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField_declaration([NotNull] CSParser.Field_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.property_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProperty_declaration([NotNull] CSParser.Property_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.property_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProperty_declaration([NotNull] CSParser.Property_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant_declaration([NotNull] CSParser.Constant_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.constant_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant_declaration([NotNull] CSParser.Constant_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.indexer_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexer_declaration([NotNull] CSParser.Indexer_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.indexer_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexer_declaration([NotNull] CSParser.Indexer_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.destructor_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDestructor_definition([NotNull] CSParser.Destructor_definitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.destructor_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDestructor_definition([NotNull] CSParser.Destructor_definitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.constructor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor_declaration([NotNull] CSParser.Constructor_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.constructor_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor_declaration([NotNull] CSParser.Constructor_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_declaration([NotNull] CSParser.Method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_declaration([NotNull] CSParser.Method_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.method_member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_member_name([NotNull] CSParser.Method_member_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.method_member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_member_name([NotNull] CSParser.Method_member_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.operator_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperator_declaration([NotNull] CSParser.Operator_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.operator_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperator_declaration([NotNull] CSParser.Operator_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.arg_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg_declaration([NotNull] CSParser.Arg_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.arg_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg_declaration([NotNull] CSParser.Arg_declarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.method_invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_invocation([NotNull] CSParser.Method_invocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.method_invocation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_invocation([NotNull] CSParser.Method_invocationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.object_creation_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject_creation_expression([NotNull] CSParser.Object_creation_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.object_creation_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject_creation_expression([NotNull] CSParser.Object_creation_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="CSParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] CSParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] CSParser.IdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Obfuscation.Core.CSharpAnalysis
